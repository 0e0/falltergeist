#############################################################################
# Makefile for building: falltergeist
# Generated by qmake (2.01a) (Qt 4.8.3) on: ?? ????. 24 20:59:52 2012
# Project:  falltergeist.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile falltergeist.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT
CFLAGS        = -m64 -pipe -O2 -Wall -W $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)   -lSDL 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		Surface.cpp \
		Exception.cpp \
		State.cpp \
		Game.cpp \
		Screen.cpp \
		States/StartState.cpp \
		States/MainMenuState.cpp \
		UI/Button.cpp \
		InteractiveSurface.cpp \
		Event.cpp \
		States/SaveMenuState.cpp \
		Fallout/DatFile.cpp \
		Fallout/DatFileItem.cpp \
		Fallout/FrmFileType.cpp \
		Fallout/PalFileType.cpp \
		ResourceManager.cpp \
		CrossPlatform.cpp 
OBJECTS       = main.o \
		Surface.o \
		Exception.o \
		State.o \
		Game.o \
		Screen.o \
		StartState.o \
		MainMenuState.o \
		Button.o \
		InteractiveSurface.o \
		Event.o \
		SaveMenuState.o \
		DatFile.o \
		DatFileItem.o \
		FrmFileType.o \
		PalFileType.o \
		ResourceManager.o \
		CrossPlatform.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		falltergeist.pro
QMAKE_TARGET  = falltergeist
DESTDIR       = 
TARGET        = falltergeist

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: falltergeist.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -o Makefile falltergeist.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -o Makefile falltergeist.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/falltergeist1.0.0 || $(MKDIR) .tmp/falltergeist1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/falltergeist1.0.0/ && (cd `dirname .tmp/falltergeist1.0.0` && $(TAR) falltergeist1.0.0.tar falltergeist1.0.0 && $(COMPRESS) falltergeist1.0.0.tar) && $(MOVE) `dirname .tmp/falltergeist1.0.0`/falltergeist1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/falltergeist1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

main.o: main.cpp Game.h \
		Exception.h \
		States/StartState.h \
		State.h \
		Fallout/DatFile.h \
		Fallout/DatFileItem.h \
		Fallout/FrmFileType.h \
		Fallout/PalFileType.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

Surface.o: Surface.cpp Surface.h \
		Exception.h \
		Fallout/FrmFileType.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Surface.o Surface.cpp

Exception.o: Exception.cpp Exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Exception.o Exception.cpp

State.o: State.cpp State.h \
		Surface.h \
		Exception.h \
		Game.h \
		Screen.h \
		InteractiveSurface.h \
		Event.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o State.o State.cpp

Game.o: Game.cpp Game.h \
		Exception.h \
		State.h \
		Screen.h \
		Event.h \
		ResourceManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Game.o Game.cpp

Screen.o: Screen.cpp Screen.h \
		Surface.h \
		Exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Screen.o Screen.cpp

StartState.o: States/StartState.cpp States/StartState.h \
		State.h \
		States/MainMenuState.h \
		Game.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o StartState.o States/StartState.cpp

MainMenuState.o: States/MainMenuState.cpp States/MainMenuState.h \
		State.h \
		Game.h \
		Screen.h \
		UI/Button.h \
		InteractiveSurface.h \
		Surface.h \
		Exception.h \
		Event.h \
		States/SaveMenuState.h \
		Fallout/FrmFileType.h \
		ResourceManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MainMenuState.o States/MainMenuState.cpp

Button.o: UI/Button.cpp UI/Button.h \
		InteractiveSurface.h \
		State.h \
		Surface.h \
		Exception.h \
		Event.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Button.o UI/Button.cpp

InteractiveSurface.o: InteractiveSurface.cpp InteractiveSurface.h \
		State.h \
		Surface.h \
		Exception.h \
		Event.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o InteractiveSurface.o InteractiveSurface.cpp

Event.o: Event.cpp Event.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Event.o Event.cpp

SaveMenuState.o: States/SaveMenuState.cpp States/SaveMenuState.h \
		Game.h \
		State.h \
		UI/Button.h \
		InteractiveSurface.h \
		Surface.h \
		Exception.h \
		Event.h \
		ResourceManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SaveMenuState.o States/SaveMenuState.cpp

DatFile.o: Fallout/DatFile.cpp Fallout/DatFile.h \
		Exception.h \
		Fallout/DatFileItem.h \
		Fallout/FrmFileType.h \
		Fallout/PalFileType.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DatFile.o Fallout/DatFile.cpp

DatFileItem.o: Fallout/DatFileItem.cpp Fallout/DatFileItem.h \
		Fallout/DatFile.h \
		Exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DatFileItem.o Fallout/DatFileItem.cpp

FrmFileType.o: Fallout/FrmFileType.cpp Fallout/FrmFileType.h \
		Fallout/DatFileItem.h \
		Surface.h \
		Exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FrmFileType.o Fallout/FrmFileType.cpp

PalFileType.o: Fallout/PalFileType.cpp Fallout/PalFileType.h \
		Fallout/DatFileItem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PalFileType.o Fallout/PalFileType.cpp

ResourceManager.o: ResourceManager.cpp ResourceManager.h \
		Surface.h \
		Exception.h \
		Fallout/DatFile.h \
		Fallout/DatFileItem.h \
		Fallout/FrmFileType.h \
		Fallout/PalFileType.h \
		CrossPlatform.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ResourceManager.o ResourceManager.cpp

CrossPlatform.o: CrossPlatform.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CrossPlatform.o CrossPlatform.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

